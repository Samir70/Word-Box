{"version":3,"sources":["Components/GrabbedText.js","Components/Reader.js","Components/TextCatalogue.js","Components/WordListCheckbox.js","Components/WordListDisplay.js","Components/TestPage.js","Components/TestMaker.js","Assets/Vocab.js","App.js","serviceWorker.js","index.js"],"names":["GrabbedText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeDefaultTitle","event","setState","grabbedTitle","target","value","componentDidMount","title","splitUpText","text","split","length","firstFiveWords","slice","defaultTitle","i","editText","updateMode","saveText","state","updateTitle","d","Date","fullTime","toTimeString","dd","getDate","mm","getMonth","timeAndDate","getFullYear","toString","substr","alert","newTitleInput","knownNouns","knownWords","nouns","foreignNoun","foreign","push","knownVerbs","verbs","foreignInfinitive","infinitive","presentForeign","concat","knownAdjectives","adjectives","foreignAdjectiveFemale","female","foreignAdjectiveMale","male","foreignAdjectiveNeuter","neuter","knownDefArticles","defArticle","toLowerCase","allKnownWords","allKnownWordsUpperFirstChar","map","word","index","charAt","toUpperCase","allKnownWordsUpperAll","buttonStyles","display","fontSize","margin","marginBottom","marginTop","width","knownWordStyle","color","unknownWordStyle","newWordArray","match","includes","react_default","a","createElement","key","style","type","autoFocus","textAlign","paddingTop","onChange","id","padding","onClick","React","Component","Reader","componentWillReceiveProps","nextProps","userTextInput","userTitleInput","saveEditedText","editSavedText","handleChangeText","handleChangeTitle","updatedTitle","grabText","pastedText","refs","myTextArea","newTitle","myTitleArea","updateText","mode","textAreaStyles","mainAreaStyles","textBoxStyle","border","ref","placeholder","rows","cols","Components_GrabbedText","TextCatalogue","listStyle","listStyleType","linkStyle","linkDivStyle","paddingBottom","savedTexts","textsArray","item","href","goToReader","WordListCheckbox","selection","nounsBtn","verbsBtn","adjBtn","ButtonGroup","vertical","Button","variant","click","Form","Group","Control","changeSearch","Check","label","changeCheckBox","WordListDisplay","wordList","types","words","english","filter","x","searchFromStart","indexOf","searchFor","sort","Container","Row","Col","Components_WordListCheckbox","changeTypes","TestPage","transMode","questionSentence","testQ","answerSentence","placeHolderText","language","answerWords","markedAns","userAns","className","changeAns","switchModeClick","rndSentence","wList","noun1","arr","Math","floor","random","gender","rndNoun","adj1","rndAdj","Noun","eng","f","_foreign","g","_gender","Verb","_infinitive","_present","Array","from","_presentForeign","Adjective","beer","wine","dog","table","banana","tree","bed","woman","man","car","gift","hospital","night","toBe","present","toDo","young","old","small","large","blue","green","beautiful","healthy","strong","cold","hot","foreignLang","App","typesToShow","translationMode","userAnswer","sentences","tabToShow","readerMode","wordToSearchFor","changeToShow","category","ttShow","switchModeHandler","newMode","ChangeAnswerHandler","ans","console","log","newTextObj","saveToLocalStorage","editedTitle","editedText","JSON","parse","localStorage","getItem","setItem","stringify","componentWillMount","textObj","e","textTitle","matchingText","preventDefault","updateReaderMode","changeSearchWord","changeStartChecked","_this2","Tabs","activeKey","onSelect","fill","Tab","eventKey","Components_Reader","Components_TextCatalogue","Components_WordListDisplay","src_Components_TestPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.775b2746.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass GrabbedText extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            newTitleInput: '',\r\n            grabbedTitle: 'This is the default title'\r\n        }\r\n    }\r\n\r\n    changeDefaultTitle = (event) => {\r\n        this.setState(\r\n            {grabbedTitle: event.target.value}\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        if (this.props.title !== '') {\r\n            this.setState(\r\n                {grabbedTitle: this.props.title}\r\n            )\r\n        } else {\r\n\r\n            var splitUpText = this.props.text.split(' ')\r\n\r\n            if (splitUpText.length < 6) {\r\n                var firstFiveWords = splitUpText.slice(0, splitUpText.length) \r\n                var defaultTitle = ''\r\n                for (let i = 0; i < splitUpText.length; i++){\r\n                    defaultTitle = defaultTitle + firstFiveWords[i] + ' '\r\n                    }\r\n                    defaultTitle = defaultTitle.slice(0, -1)\r\n                    defaultTitle = defaultTitle + '...'\r\n                this.setState(\r\n                    {grabbedTitle: defaultTitle}\r\n                    ) \r\n                } else {\r\n                    firstFiveWords = splitUpText.slice(0, 6) \r\n                    defaultTitle = ''\r\n                    for (let i = 0; i < 6; i++ ){\r\n                        defaultTitle = defaultTitle + firstFiveWords[i] + ' '\r\n                    }\r\n                    defaultTitle = defaultTitle.slice(0, -1)\r\n                    defaultTitle = defaultTitle + '...'\r\n                    this.setState(\r\n                        {grabbedTitle: defaultTitle}\r\n                        ) \r\n                }\r\n    }\r\n}\r\n\r\n    editText = () => {\r\n        this.props.updateMode('paste')\r\n    }\r\n\r\n    saveText = () => {\r\n        if (this.state.grabbedTitle === '') {\r\n            alert('Please add a title')\r\n            return\r\n        } else {\r\n        this.props.updateTitle(this.state.grabbedTitle)\r\n\r\n        var d = new Date()\r\n        var fullTime = d.toTimeString()\r\n        fullTime = fullTime.split(' ')[0]\r\n\r\n        var dd = d.getDate()\r\n        var mm = d.getMonth() + 1\r\n        var yy = d.getFullYear().toString().substr(-2)\r\n        if (dd < 10) {\r\n        dd = '0' + dd \r\n        }\r\n        if (mm < 10) {\r\n        mm = '0' + mm\r\n        }\r\n        var fullDate = dd + '/' + mm + '/' + yy\r\n        var timeAndDate = fullTime + ' ' + fullDate\r\n\r\n        this.props.saveText(timeAndDate, this.state.grabbedTitle, this.props.text)\r\n        this.props.updateMode('saved')\r\n    }\r\n    }\r\n\r\n    render() {\r\n\r\n    let knownNouns = []\r\n    for (let i = 0; i < this.props.knownWords.nouns.length; i++) {\r\n        let foreignNoun = this.props.knownWords.nouns[i].foreign\r\n        knownNouns.push(foreignNoun)\r\n    }\r\n\r\n    let knownVerbs = []\r\n    for (let i = 0; i < this.props.knownWords.verbs.length; i++) {\r\n        let foreignInfinitive = this.props.knownWords.verbs[i].infinitive\r\n        knownVerbs.push(foreignInfinitive)\r\n        let presentForeign = this.props.knownWords.verbs[i].presentForeign\r\n        knownVerbs = knownVerbs.concat(presentForeign)\r\n    }\r\n\r\n    let knownAdjectives = []\r\n    for (let i = 0; i < this.props.knownWords.adjectives.length; i++) {\r\n        let foreignAdjectiveFemale = this.props.knownWords.adjectives[i].foreign.female\r\n        let foreignAdjectiveMale = this.props.knownWords.adjectives[i].foreign.male\r\n        let foreignAdjectiveNeuter = this.props.knownWords.adjectives[i].foreign.neuter\r\n        knownAdjectives.push(foreignAdjectiveFemale, foreignAdjectiveMale, foreignAdjectiveNeuter)\r\n    }\r\n\r\n    let knownDefArticles = []\r\n    knownDefArticles.push(this.props.knownWords.defArticle.foreign.male.toLowerCase())\r\n    knownDefArticles.push(this.props.knownWords.defArticle.foreign.female.toLowerCase())\r\n    knownDefArticles.push(this.props.knownWords.defArticle.foreign.neuter.toLowerCase())\r\n\r\n    let allKnownWords = []\r\n\r\n    allKnownWords = allKnownWords.concat(knownNouns, knownVerbs, knownAdjectives, knownDefArticles)\r\n\r\n    let allKnownWordsUpperFirstChar = allKnownWords.map(function(word, index) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1)\r\n    })\r\n\r\n    let allKnownWordsUpperAll = allKnownWords.map(function(word, index) {\r\n        return word.toUpperCase()\r\n    })\r\n\r\n        const divStyle = {\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '100%',\r\n            padding: '20px'\r\n        }\r\n\r\n        const titleStyle = {\r\n            fontSize: 30,\r\n            textAlign: 'center',\r\n            paddingTop: 20,\r\n            width: '100%'\r\n        }\r\n\r\n        const buttonStyles = {\r\n            display: 'inline-block',\r\n            fontSize: '25px',\r\n            margin: '0 auto',\r\n            marginBottom: '100px',\r\n            marginTop: '20px',\r\n            width: '100px'\r\n        }\r\n\r\n        const knownWordStyle = {\r\n            color: 'green'\r\n        }\r\n\r\n        const unknownWordStyle = {\r\n            color: 'red'\r\n        }\r\n\r\n        var splitText = this.props.text.match(/\\w+|\\s+|[^\\s\\w]+/g)\r\n\r\n        let newWordArray = splitText.map(function (word, index) {\r\n            if (!word.match(/\\w+/g)) {\r\n                return word\r\n            } else {\r\n                \r\n            if (allKnownWords.includes(word) || allKnownWordsUpperFirstChar.includes(word) || allKnownWordsUpperAll.includes(word)) {\r\n            \r\n            return (\r\n                <span key={word+index} style = {knownWordStyle}>{word}</span>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                <span key={word+index} style={unknownWordStyle}>{word}</span>\r\n            )\r\n        }\r\n    }\r\n    }\r\n    )\r\n\r\n        return (\r\n            <div>\r\n                <input type='text' autoFocus style={titleStyle} value={this.state.grabbedTitle} onChange={this.changeDefaultTitle}></input>\r\n                <div id='grabbedText' style = {divStyle}>{newWordArray}</div>\r\n                <button style={buttonStyles} onClick={this.editText}>Edit</button>\r\n                <button style={buttonStyles} onClick={this.saveText}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GrabbedText\r\n","import React from 'react'\r\nimport GrabbedText from './GrabbedText'\r\n\r\nclass Reader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mode: this.props.mode,\r\n            userTitleInput: '',\r\n            userTextInput: '',\r\n            title: '',\r\n            text: props.text\r\n        }\r\n    }\r\n\r\n   componentWillReceiveProps = (nextProps) => {\r\n       this.setState(\r\n           {\r\n               userTextInput: nextProps.text,\r\n               userTitleInput: nextProps.title\r\n        }\r\n       )\r\n   }\r\n\r\n   saveEditedText = () => {\r\n       this.props.saveEditedText(this.state.userTitleInput, this.state.userTextInput)\r\n       this.props.updateMode('saved')\r\n   }\r\n\r\n    editSavedText = () => {\r\n        this.props.updateMode('edit-saved')\r\n    }\r\n\r\n    handleChangeText = (event) => {\r\n        this.setState(\r\n            {userTextInput: event.target.value}\r\n        )\r\n    }\r\n\r\n    handleChangeTitle = (event) => {\r\n        this.setState(\r\n            {userTitleInput: event.target.value}\r\n        )\r\n    }\r\n\r\n    updateTitle = (updatedTitle) => {\r\n        this.props.updateTitle(updatedTitle)\r\n    }\r\n\r\n    grabText = () => {\r\n\r\n        let pastedText = this.refs.myTextArea.value\r\n        let newTitle = this.refs.myTitleArea.value\r\n        this.props.updateText(pastedText)\r\n        this.props.updateTitle(newTitle)\r\n        this.props.updateMode('grabbed')\r\n    }\r\n   \r\n    render() {\r\n\r\n        const textAreaStyles = {\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '60%'\r\n        }\r\n        \r\n        const mainAreaStyles = {\r\n            display: 'block'\r\n        }\r\n\r\n        const textBoxStyle = {\r\n            border: '2px solid black',\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            marginTop: '100px',\r\n            margin: 'auto',\r\n            padding: 20,\r\n            display: 'block',\r\n            width: '60%',\r\n            textAlign: 'left'\r\n        }\r\n\r\n        const buttonStyles = {\r\n            display: 'inline-block',\r\n            fontSize: '25px',\r\n            margin: '0 auto',\r\n            marginBottom: '100px',\r\n            marginTop: '20px',\r\n            width: '100px'\r\n        }\r\n\r\n        const savedMessageStyle = {\r\n            paddingTop: '50px'\r\n        }\r\n\r\n        if (this.props.mode === 'paste'){\r\n\r\n        return (\r\n\r\n            <div id='main-area' style={mainAreaStyles}>\r\n                <input ref='myTitleArea' placeholder='Enter title...' style={textAreaStyles} onChange={this.handleChangeTitle} value={this.state.userTitleInput}></input>\r\n                <textarea id='textArea' ref='myTextArea' rows='20' cols='80' placeholder='Paste your text here...' value={this.state.userTextInput} style={textAreaStyles} onChange={this.handleChangeText}></textarea>\r\n                <button onClick={this.grabText} style={buttonStyles}>Go!</button>\r\n            </div>\r\n\r\n        )} else if (this.props.mode === 'grabbed') {\r\n\r\n            return (\r\n\r\n                <div>\r\n                    <div style={textBoxStyle}>\r\n                        <GrabbedText title={this.props.title} text={this.props.text} knownWords={this.props.knownWords} updateTitle={this.updateTitle} updateMode={this.props.updateMode} saveText={this.props.saveText}/>\r\n                    </div>\r\n                   \r\n                </div>\r\n            )\r\n        } else if (this.props.mode === 'read'){\r\n\r\n            return (\r\n                <div>\r\n                    <h2>{this.props.title}</h2>\r\n                    <div style={textBoxStyle}>{this.props.text}</div>\r\n                    <button onClick={this.editSavedText}>Edit</button>\r\n                </div>\r\n            )\r\n\r\n        } else if (this.props.mode === 'edit-saved'){\r\n\r\n            return (\r\n                <div style={mainAreaStyles}>\r\n                <input style={textAreaStyles} value={this.state.userTitleInput} onChange={this.handleChangeTitle}></input>\r\n                <textarea rows='20' cols='80' value={this.state.userTextInput} onChange={this.handleChangeText} style={textAreaStyles}></textarea>\r\n                <button style={buttonStyles} onClick={this.saveEditedText}>Save</button>\r\n            </div>\r\n            )\r\n\r\n        } else if (this.props.mode === 'saved') {\r\n            \r\n            return (\r\n\r\n            <h2 style={savedMessageStyle}>Saved!</h2>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reader ","import React from 'react'\r\n\r\nconst TextCatalogue = (props) => {\r\n\r\nvar listStyle = {\r\n    listStyleType: 'none'\r\n}\r\n\r\nvar textCatalogueStyle = {\r\n    marginBottom: '50px'\r\n}\r\n\r\nconst headingStyle = {\r\n    paddingTop: '50px',\r\n    paddingBottom: '25px'\r\n}\r\n\r\nconst linkStyle = {\r\n    fontSize: '30px'\r\n}\r\n\r\nconst linkDivStyle = {\r\n    paddingBottom: '25px'\r\n}\r\n\r\nif (props.savedTexts !== '') {\r\n\r\nvar textsArray = props.savedTexts.map(function(item, index){\r\n    return (\r\n        <div key={item.timeAndDate} style={linkDivStyle}>\r\n            <ul style={listStyle}>\r\n                <li>{item.timeAndDate}</li>\r\n                <li><a style={linkStyle} href='#/' onClick={props.goToReader} id={item.title}>{item.title}</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n}\r\n\r\nreturn (\r\n    <div style={textCatalogueStyle}>\r\n        <h2 style={headingStyle}>Your texts: </h2>\r\n        <div>{textsArray}</div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default TextCatalogue","import React from 'react';\r\nimport './Wordlist.css';\r\nimport {Button, ButtonGroup, Form} from  'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst WordListCheckbox = (props) => {\r\n    // these will be toggle buttons not checkboxes\r\n    var onBtn = \"success\",  offBtn='secondary';\r\n    if (props.selection.includes('Nouns')) { var nounsBtn = onBtn }\r\n      else {nounsBtn = offBtn}\r\n    if (props.selection.includes('Verbs')) { var verbsBtn = onBtn }\r\n      else {verbsBtn = offBtn}\r\n    if (props.selection.includes('Adjectives')) { var adjBtn = onBtn }\r\n      else {adjBtn = offBtn}\r\n    return (\r\n        <div>\r\n            <h2>Types of words</h2>\r\n            <ButtonGroup vertical>            \r\n              <Button variant={nounsBtn} onClick={()=>props.click('Nouns')} >Nouns</Button>\r\n              <Button variant={verbsBtn} onClick={()=>props.click('Verbs')} >Verbs</Button>\r\n              <Button variant={adjBtn}  onClick={()=>props.click('Adjectives')}>Adjectives</Button>\r\n            </ButtonGroup>\r\n            <p></p>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Control type='text' placeholder='search for' onChange={props.changeSearch} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Check \r\n                  type='checkbox' \r\n                  label='Must be at start of word'\r\n                  onChange={props.changeCheckBox} />\r\n              </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordListCheckbox;","import React from 'react';\r\nimport WordListCheckbox from './WordListCheckbox';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst WordListDisplay = (props) =>  {\r\n    var wordList = ['the'];\r\n    if (props.types.includes('Nouns')) {\r\n        for (var i in props.words.nouns) {\r\n            wordList.push(props.words.nouns[i].english)\r\n        }\r\n    }\r\n    if (props.types.includes('Verbs')) {\r\n        for (i in props.words.verbs) {\r\n            wordList.push(props.words.verbs[i].english)\r\n        }\r\n    }\r\n    if (props.types.includes('Adjectives')) {\r\n        for (i in props.words.adjectives) {\r\n            wordList.push(props.words.adjectives[i].english)\r\n        }\r\n    }\r\n    wordList = wordList.filter(x=>props.searchFromStart?\r\n        x.indexOf(props.searchFor)===0 :x.includes(props.searchFor))\r\n       .sort().map(x => <span key={x}>{x}<br /></span>);\r\n    \r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                  <Col>\r\n                     <WordListCheckbox \r\n                       selection={props.types} \r\n                       click={props.changeTypes}\r\n                       changeSearch={props.changeSearch}\r\n                       changeCheckBox={props.changeCheckBox}\r\n                     />\r\n                  </Col>\r\n                  <Col>\r\n                     <div id=\"wordList\"><p>{wordList}</p></div>\r\n                  </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordListDisplay;","import React from 'react';\r\nimport './TestPage.css';\r\nimport {Button, Form} from  'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst TestPage = (props) => {  \r\n    \r\n  if (props.transMode === 'fromEng') {\r\n      var questionSentence = props.testQ.english;\r\n      var answerSentence = props.testQ.foreign;\r\n      var placeHolderText = 'Provide the '+props.language+' translation';\r\n    } else {\r\n        questionSentence = props.testQ.foreign;\r\n        answerSentence = props.testQ.english;\r\n        placeHolderText = 'Provide the English translation';\r\n  }   \r\n\r\n  var answerWords = answerSentence.toLowerCase().split(' ');\r\n  var markedAns = props.userAns === '' ? <span>I'll mark your answer here</span> \r\n      : props.userAns.split(' ').map((x, i) => {\r\n        if (x.toLowerCase() === answerWords[i]) {\r\n            return <span className='goodWord' key={i}>{x+' '}</span>\r\n        }\r\n        return <span className='badWord' key={i}>{x+' '}</span>\r\n        })\r\n\r\n  \r\n  return (\r\n      <div id='testpage'>\r\n        <h2>Translate the following</h2>\r\n        <p id='question'>{questionSentence}</p>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder={placeHolderText}\r\n              value={props.userAns} \r\n              onChange={props.changeAns} />\r\n          </Form.Group>\r\n        </Form>\r\n        <div id='answer'>{markedAns}</div>\r\n        <p></p>\r\n        <Button variant='primary' onClick={props.switchModeClick}>Translate the other way</Button>\r\n        <p>If your translation matches what I'm thinking of, then your words will be green. \r\n          If a word is red, then that is not what I am thinking of. \r\n          If you get the complete sentence, I will reward you with a new question!</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TestPage;","const rndNoun = (arr) => {\r\n    var i = Math.floor(Math.random()*arr.length);\r\n    return {english:arr[i].english, foreign:arr[i].foreign, gender:arr[i].gender}\r\n}\r\n\r\n// so far only tense in vocab.js is 'present'\r\n// nb: person is zero-indexed [1stSing, 2ndSing, 3rdSing, 1stPlur, 2ndPlur, 3rdPlur]\r\n\r\n// ********************\r\n// currently no use for rndVerb, so commented out\r\n// const rndVerb = (arr, tense, person) => {\r\n//     var i = Math.floor(Math.random()*arr.length);\r\n//     return {english:arr[i][tense][person], foreign: arr[i][tense+'Foreign'][person]}\r\n// }\r\n\r\n\r\n// gender is stored as an array [male, female, neuter]\r\n// not fully implemented, because the gender of nouns is not currently stored\r\nconst rndAdj = (arr, gender) => {\r\n    var i = Math.floor(Math.random()*arr.length);\r\n    return {english:arr[i].english, foreign:arr[i].foreign[gender]}  \r\n}\r\n\r\n\r\nexport const rndSentence = (wList) => {\r\n    var noun1 = rndNoun(wList.nouns);      \r\n    //currently no use for verb in sentence\r\n    //var verb1 = rndVerb(wList.verbs, 'present', 2);\r\n    var adj1 = rndAdj(wList.adjectives, noun1.gender); //masculine because gender not currently defined\r\n    var englishSentence = 'The '+noun1.english +' is '+ adj1.english;\r\n    //NB: 'the' needs to match gender too\r\n    var defArt = wList.defArticle.foreign[noun1.gender];\r\n    var foreignSentence = defArt +' '+noun1.foreign +' je '+ adj1.foreign;\r\n\r\n    return {english:englishSentence, foreign:foreignSentence}\r\n}","class Noun {\r\n    constructor(eng) {\r\n        this.english = eng;\r\n    }\r\n    set foreign(f) {\r\n        this._foreign = f;\r\n    } \r\n    get foreign() {\r\n        return this._foreign;\r\n    }\r\n    set gender(g) {\r\n        this._gender = g;\r\n    }\r\n    get gender() {\r\n        return this._gender;\r\n    }\r\n}\r\n\r\nclass Verb {\r\n    constructor(eng) {\r\n        this.english = eng;\r\n    }\r\n    \r\n    set infinitive(f) {\r\n        this._infinitive = f\r\n    }\r\n    get infinitive() {\r\n        return this._infinitive\r\n    }\r\n\r\n    set present(arr) {\r\n        // the array will list the present tense in order [first, you, he, we, you2, they]\r\n        if (arr.length === 6) {\r\n            this._present = Array.from(arr)\r\n        } else {/*need to throw an error */}\r\n    }\r\n    // this is untidy, but you get present tense \r\n    // you get the whole array of 6\r\n    // first person is zero-th element of array\r\n    get present() {\r\n        return this._present;\r\n    }\r\n\r\n    set presentForeign(arr) {\r\n        if (arr.length === 6) {\r\n            this._presentForeign = Array.from(arr)\r\n        } else {/*need to throw an error */}\r\n    }\r\n\r\n    get presentForeign() {\r\n        return this._presentForeign\r\n    }\r\n}\r\n\r\nclass Adjective {\r\n    constructor(eng) {\r\n        this.english = eng\r\n    }\r\n\r\n    set foreign(arr) {\r\n        // eventually: I would like this to be [stem, group]\r\n        // This will allow calculation of the foreign adjective for regular adjectives\r\n        // but currently it is [male, female, neuter]\r\n        // actually: using the same structure as the defArticle will simplify the creation of \r\n        // a test sentence. So send an array to this method, it will create an object\r\n        this._foreign = {male:arr[0], female:arr[1], neuter:arr[2]}\r\n    }\r\n\r\n    get foreign() {\r\n        return this._foreign\r\n    }\r\n}\r\n\r\nvar beer = new Noun('beer');\r\nbeer.foreign = 'pivo';\r\nbeer.gender = 'neuter';\r\nvar wine = new Noun('wine');\r\nwine.foreign = 'vino';\r\nwine.gender = 'neuter';\r\nvar dog = new Noun('dog');\r\ndog.foreign = 'pes';\r\ndog.gender = 'male';\r\nvar table = new Noun('table');\r\ntable.foreign = 'stul';\r\ntable.gender = 'male';\r\nvar banana = new Noun('banana');\r\nbanana.foreign = 'banan';\r\nbanana.gender = 'male';\r\nvar tree = new Noun('tree');\r\ntree.foreign = 'strom';\r\ntree.gender = 'male'\r\nvar bed = new Noun('bed');\r\nbed.foreign = 'postel';\r\nbed.gender = 'female';\r\nvar woman = new Noun('woman');\r\nwoman.foreign = 'zena';\r\nwoman.gender = 'female';\r\nvar man = new Noun('man');\r\nman.foreign = 'muz';\r\nman.gender = 'male';\r\nvar car = new Noun('car');\r\ncar.foreign = 'auto';\r\ncar.gender = 'neuter';\r\nvar gift = new Noun('gift');\r\ngift.foreign = 'darek';\r\ngift.gender = 'male';\r\nvar hospital = new Noun('hospital');\r\nhospital.foreign = 'nemocnice';\r\nhospital.gender = 'female';\r\nvar night = new Noun('night');\r\nnight.foreign = 'noc';\r\nnight.gender = 'female';\r\n\r\nvar toBe = new Verb('to be');\r\ntoBe.infinitive = 'byt';\r\ntoBe.present = ['am', 'are', 'is', 'are', 'are', 'are'];\r\ntoBe.presentForeign = ['jsem', 'jsi', 'je', 'jsme', 'jste', 'jsou'];\r\nvar toDo = new Verb('to do');\r\ntoDo.infinitive = 'delat';\r\ntoDo.present = ['do', 'do', 'does','do','do','do'];\r\ntoDo.presentForeign = ['delam', 'delas', 'dela', 'delame', 'delate', 'delaji']\r\n\r\n\r\nvar young = new Adjective('young');\r\nyoung.foreign = ['mlady', 'mlada', 'mlade'];\r\nvar old = new Adjective('old');\r\nold.foreign = ['stary', 'stara', 'stare'];\r\nvar small = new Adjective('small');\r\nsmall.foreign = ['maly', 'mala', 'male'];\r\nvar large = new Adjective('large');\r\nlarge.foreign = ['velky', 'velka', 'velke']; \r\nvar blue = new Adjective('blue');\r\nblue.foreign = ['modry', 'modra', 'modre'];\r\nvar green = new Adjective('green');\r\ngreen.foreign = ['zeleny', 'zelena', 'zelene'];\r\nvar beautiful = new Adjective('beautfiul');\r\nbeautiful.foreign = ['krasny', 'krasna', 'krasne'];\r\nvar healthy = new Adjective('healthy');\r\nhealthy.foreign = ['zdravy', 'zdrava', 'zdrave'];\r\nvar strong = new Adjective('strong');\r\nstrong.foreign = ['silny', 'silna', 'silne'];\r\nvar cold = new Adjective('cold');\r\ncold.foreign = ['studeny', 'studena', 'studene'];\r\nvar hot = new Adjective('hot');\r\nhot.foreign = ['horky', 'horka', 'horke'];\r\n\r\n\r\nexport var wordList = {\r\n    foreignLang : 'Czech',\r\n    defArticle : {english: 'The', foreign: {male:'Ten', female:'Ta', neuter:'To'}},\r\n    nouns : [beer, wine, dog, table, banana, woman, man, tree, bed, car, gift, hospital, night],\r\n    verbs : [toBe, toDo],\r\n    adjectives : [young, old, small, large, blue, green, beautiful, healthy, strong, cold, hot] \r\n}","import React from 'react';\r\nimport Reader from './Components/Reader';\r\nimport TextCatalogue from './Components/TextCatalogue'\r\nimport WordListDisplay from './Components/WordListDisplay';\r\nimport TestPage from './Components/TestPage';\r\nimport {rndSentence} from './Components/TestMaker';\r\nimport {wordList} from './Assets/Vocab';\r\nimport './App.css';\r\nimport {Tabs, Tab} from  'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    knownWords : wordList,\r\n    typesToShow : ['Nouns', 'Verbs', 'Adjectives'], \r\n    translationMode : 'fromEng', \r\n    userAnswer: '',\r\n    sentences: rndSentence(wordList), \r\n    tabToShow: 'testPage',\r\n    savedTexts: '',\r\n    text: '',\r\n    title: '',\r\n    readerMode: 'paste',\r\n    wordToSearchFor: '',\r\n    searchFromStart: false\r\n  }\r\n\r\n  changeToShow = (category) => {\r\n    var ttShow = Array.from(this.state.typesToShow);\r\n    if (ttShow.includes(category)) {\r\n      ttShow = ttShow.filter(x => x!==category)\r\n    } else {ttShow.push(category)}\r\n    this.setState({typesToShow: ttShow});\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    if (this.state.translationMode === 'fromEng') {\r\n      var newMode = 'toEng'\r\n    } else {newMode = 'fromEng'}\r\n    this.setState({translationMode: newMode})\r\n  }\r\n\r\n  ChangeAnswerHandler = (event) => {\r\n    if (this.state.translationMode === 'fromEng') {\r\n      var ans = this.state.sentences.foreign\r\n    } else {ans = this.state.sentences.english}\r\n    console.log(ans, this.state.userAnswer)\r\n    if (event.target.value.toLowerCase() === ans.toLowerCase()) {\r\n      this.setState({sentences: rndSentence(this.state.knownWords), userAnswer:''})\r\n    } else { this.setState({userAnswer:event.target.value}) }\r\n  }\r\n\r\n  saveText = (timeAndDate, title, text) => {\r\n\r\n    var newTextObj = {\r\n      timeAndDate: timeAndDate,\r\n      title: title,\r\n      text: text\r\n    }\r\n  \r\n    this.saveToLocalStorage(newTextObj)\r\n  }\r\n\r\n  saveEditedText = (editedTitle, editedText) => {\r\n    var savedTexts = JSON.parse(localStorage.getItem('savedTexts'))\r\n    for (let i = 0; i < savedTexts.length; i++) {\r\n      if (savedTexts[i].title === this.state.title) {\r\n        savedTexts[i].title = editedTitle\r\n        savedTexts[i].text = editedText\r\n        localStorage.setItem('savedTexts', JSON.stringify(savedTexts))\r\n        break\r\n      } \r\n    }\r\n    this.componentWillMount()\r\n  }\r\n\r\n  saveToLocalStorage = (textObj) => {\r\n    let savedTexts\r\n  \r\n    if (localStorage.getItem('savedTexts') != null) {\r\n      savedTexts = JSON.parse(localStorage.getItem('savedTexts'))\r\n      savedTexts.push(textObj);\r\n    } else {\r\n      savedTexts = []\r\n      savedTexts.push(textObj);\r\n    }\r\n    localStorage.setItem('savedTexts', JSON.stringify(savedTexts))\r\n    this.componentWillMount()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    if (localStorage.getItem('savedTexts') != null) {\r\n      var savedTexts = JSON.parse(localStorage.getItem('savedTexts'))\r\n      this.setState(\r\n        {savedTexts: savedTexts}\r\n      )\r\n    } else {\r\n        this.setState(\r\n          {savedTexts: ''}\r\n        )\r\n    }\r\n  }\r\n\r\n  goToReader = (e) => {\r\n    var textTitle = e.target.id\r\n    var matchingTextArray = this.state.savedTexts.filter(text => text.title === textTitle)\r\n    var matchingText = matchingTextArray[0].text\r\n    this.setState({tabToShow: 'Reader', readerMode: 'read', text: matchingText, title: textTitle})\r\n    e.preventDefault()\r\n  }\r\n\r\n  updateReaderMode = (mode) => {\r\n    this.setState(\r\n      {readerMode: mode}\r\n    )\r\n  }\r\n\r\n  updateText = (text) => {\r\n    this.setState(\r\n      {text: text}\r\n    )\r\n  }\r\n\r\n  updateTitle = (updatedTitle) => {\r\n    this.setState(\r\n      {title: updatedTitle}\r\n    )\r\n  }\r\n  changeSearchWord = (event) => {\r\n    this.setState({wordToSearchFor:event.target.value})\r\n  }\r\n\r\n  changeStartChecked = (event) => {\r\n    this.setState({searchFromStart:!this.state.searchFromStart})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"App-header\">Word Box</h1>\r\n        <Tabs\r\n          activeKey={this.state.tabToShow}\r\n          onSelect={key => this.setState({tabToShow:key})}\r\n          variant = 'pills'\r\n          fill\r\n        >\r\n        <Tab eventKey='Reader' title='Analyse text'>\r\n          <Reader knownWords={this.state.knownWords} saveText={this.saveText} mode={this.state.readerMode} updateMode={this.updateReaderMode} updateText={this.updateText} updateTitle={this.updateTitle} text={this.state.text} title={this.state.title} saveEditedText={this.saveEditedText}/>\r\n        </Tab>\r\n        <Tab eventKey='TextCatalogue' title='Saved Texts'>\r\n          <TextCatalogue savedTexts={this.state.savedTexts} goToReader={this.goToReader}/>\r\n        </Tab>\r\n        <Tab eventKey='WordList' title='Known Words'>\r\n          <WordListDisplay \r\n            words={this.state.knownWords} \r\n            types={this.state.typesToShow}\r\n            changeTypes={this.changeToShow}\r\n            searchFor={this.state.wordToSearchFor}\r\n            changeSearch={this.changeSearchWord}\r\n            searchFromStart={this.state.searchFromStart}\r\n            changeCheckBox={this.changeStartChecked}\r\n          />          \r\n        </Tab>\r\n        <Tab eventKey='testPage' title='Test Your knowledge'>\r\n          <TestPage \r\n            language={this.state.knownWords.foreignLang}\r\n            transMode={this.state.translationMode}\r\n            switchModeClick={this.switchModeHandler}\r\n            userAns={this.state.userAnswer}\r\n            testQ={this.state.sentences}\r\n            changeAns={this.ChangeAnswerHandler}\r\n          />          \r\n        </Tab>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  } \r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}