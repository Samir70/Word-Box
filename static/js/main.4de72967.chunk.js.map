{"version":3,"sources":["Components/GrabbedText.js","Components/Reader.js","Components/TextCatalogue.js","Components/WordListCheckbox.js","Components/WordListDisplay.js","Components/TestPage.js","Components/TestMaker.js","Assets/Vocab.js","App.js","serviceWorker.js","index.js"],"names":["GrabbedText","props","knownNouns","i","knownWords","nouns","length","foreignNoun","foreign","push","knownVerbs","verbs","foreignInfinitive","infinitive","presentForeign","concat","knownAdjectives","adjectives","foreignAdjectiveFemale","female","foreignAdjectiveMale","male","foreignAdjectiveNeuter","neuter","knownDefArticles","defArticle","toLowerCase","allKnownWords","allKnownWordsUpperFirstChar","map","word","index","charAt","toUpperCase","slice","allKnownWordsUpperAll","knownWordStyle","color","unknownWordStyle","newWordArray","text","match","includes","react_default","a","createElement","key","style","fontSize","textAlign","paddingTop","title","id","marginBottom","margin","display","width","padding","Reader","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeText","event","setState","userTextInput","target","value","handleChangeTitle","userTitleInput","grabText","pastedText","refs","myTextArea","newTitle","myTitleArea","updateText","updateTitle","updateMode","editText","saveText","d","Date","dateString","getHours","getMinutes","getDate","getMonth","getFullYear","toString","substr","state","mode","textAreaStyles","buttonStyles","marginTop","ref","placeholder","onChange","rows","cols","onClick","border","Components_GrabbedText","React","Component","TextCatalogue","listStyle","listStyleType","linkStyle","linkDivStyle","paddingBottom","savedTexts","textsArray","item","date","href","goToReader","WordListCheckbox","selection","nounsBtn","verbsBtn","adjBtn","ButtonGroup","vertical","Button","variant","click","Form","Group","Control","type","changeSearch","Check","label","changeCheckBox","WordListDisplay","wordList","types","words","english","filter","x","searchFromStart","indexOf","searchFor","sort","Container","Row","Col","Components_WordListCheckbox","changeTypes","TestPage","transMode","questionSentence","testQ","answerSentence","answerWords","split","markedAns","userAns","className","changeAns","switchModeClick","rndSentence","wList","noun1","arr","Math","floor","random","gender","rndNoun","adj1","rndAdj","Noun","eng","f","_foreign","g","_gender","Verb","_infinitive","_present","Array","from","_presentForeign","Adjective","beer","wine","dog","table","banana","tree","bed","woman","man","car","gift","hospital","night","toBe","present","toDo","young","old","small","large","blue","green","beautiful","healthy","strong","cold","hot","App","typesToShow","translationMode","userAnswer","sentences","tabToShow","readerMode","wordToSearchFor","changeToShow","category","ttShow","switchModeHandler","newMode","ChangeAnswerHandler","ans","console","log","newTextObj","saveToLocalStorage","textObj","localStorage","getItem","JSON","parse","setItem","stringify","componentWillMount","e","textTitle","matchingText","preventDefault","updateReaderMode","changeSearchWord","changeStartChecked","_this2","Tabs","activeKey","onSelect","fill","Tab","eventKey","Components_Reader","Components_TextCatalogue","Components_WordListDisplay","src_Components_TestPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAgGeA,EA9FK,SAACC,GAGjB,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAMG,WAAWC,MAAMC,OAAQH,IAAK,CACpD,IAAII,EAAcN,EAAMG,WAAWC,MAAMF,GAAGK,QAC5CN,EAAWO,KAAKF,GAIpB,IADA,IAAIG,EAAa,GACRP,EAAI,EAAGA,EAAIF,EAAMG,WAAWO,MAAML,OAAQH,IAAK,CACpD,IAAIS,EAAoBX,EAAMG,WAAWO,MAAMR,GAAGU,WAClDH,EAAWD,KAAKG,GAChB,IAAIE,EAAiBb,EAAMG,WAAWO,MAAMR,GAAGW,eAC/CJ,EAAaA,EAAWK,OAAOD,GAInC,IADA,IAAIE,EAAkB,GACbb,EAAI,EAAGA,EAAIF,EAAMG,WAAWa,WAAWX,OAAQH,IAAK,CACzD,IAAIe,EAAyBjB,EAAMG,WAAWa,WAAWd,GAAGK,QAAQW,OAChEC,EAAuBnB,EAAMG,WAAWa,WAAWd,GAAGK,QAAQa,KAC9DC,EAAyBrB,EAAMG,WAAWa,WAAWd,GAAGK,QAAQe,OACpEP,EAAgBP,KAAKS,EAAwBE,EAAsBE,GAGvE,IAAIE,EAAmB,GACvBA,EAAiBf,KAAKR,EAAMG,WAAWqB,WAAWjB,QAAQa,KAAKK,eAC/DF,EAAiBf,KAAKR,EAAMG,WAAWqB,WAAWjB,QAAQW,OAAOO,eACjEF,EAAiBf,KAAKR,EAAMG,WAAWqB,WAAWjB,QAAQe,OAAOG,eAEjE,IAAIC,EAAgB,GAIhBC,GAFJD,EAAgBA,EAAcZ,OAAOb,EAAYQ,EAAYM,EAAiBQ,IAE9BK,IAAI,SAASC,EAAMC,GAC/D,OAAOD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,KAGjDC,EAAwBR,EAAcE,IAAI,SAASC,EAAMC,GACzD,OAAOD,EAAKG,gBAkBNG,EAAiB,CACnBC,MAAO,SAGLC,EAAmB,CACrBD,MAAO,OAKPE,EAFYtC,EAAMuC,KAAKC,MAAM,qBAEJZ,IAAI,SAAUC,EAAMC,GAC7C,OAAKD,EAAKW,MAAM,QAIZd,EAAce,SAASZ,IAASF,EAA4Bc,SAASZ,IAASK,EAAsBO,SAASZ,GAG7Ga,EAAAC,EAAAC,cAAA,QAAMC,IAAKhB,EAAKC,EAAOgB,MAASX,GAAiBN,GAKjDa,EAAAC,EAAAC,cAAA,QAAMC,IAAKhB,EAAKC,EAAOgB,MAAOT,GAAmBR,GAX1CA,IAkBf,OACIa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,MAtCO,CACfC,SAAU,GACVC,UAAW,SACXC,WAAY,KAmCgBjD,EAAMkD,OAC9BR,EAAAC,EAAAC,cAAA,OAAKO,GAAG,cAAcL,MAhDb,CACbC,SAAU,GACVK,aAAc,OACdC,OAAQ,OACRC,QAAS,QACTC,MAAO,OACPC,QAAS,SA0CqClB,KC0B3CmB,cAjHX,SAAAA,EAAYzD,GAAO,IAAA0D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM7D,KAWViE,iBAAmB,SAACC,GAChBR,EAAKS,SACD,CAACC,cAAeF,EAAMG,OAAOC,SAdlBZ,EAkBnBa,kBAAoB,SAACL,GACjBR,EAAKS,SACD,CAACK,eAAgBN,EAAMG,OAAOC,SApBnBZ,EAwBnBe,SAAW,WAEP,IAAIC,EAAahB,EAAKiB,KAAKC,WAAWN,MAClCO,EAAWnB,EAAKiB,KAAKG,YAAYR,MACrCZ,EAAK1D,MAAM+E,WAAWL,GACtBhB,EAAK1D,MAAMgF,YAAYH,GACvBnB,EAAK1D,MAAMiF,WAAW,SA9BPvB,EAiCnBwB,SAAW,WACPxB,EAAK1D,MAAMiF,WAAW,UAlCPvB,EAqCnByB,SAAW,WACP,IAAIC,EAAI,IAAIC,KACRC,EAAaF,EAAEG,WAAa,IAAMH,EAAEI,aAAe,IAAMJ,EAAEK,UAAY,KAAOL,EAAEM,WAAW,GAAK,IAAMN,EAAEO,cAAcC,WAAWC,QAAQ,GAC7InC,EAAK1D,MAAMmF,SAASG,EAAY5B,EAAK1D,MAAMkD,MAAOQ,EAAK1D,MAAMuC,MAC7DmB,EAAK1D,MAAMiF,WAAW,UAtCtBvB,EAAKoC,MAAQ,CACTC,KAAMrC,EAAK1D,MAAM+F,KACjBvB,eAAgB,GAChBJ,cAAe,GACflB,MAAO,GACPX,KAAMvC,EAAMuC,MARDmB,wEA8Cf,IAAMsC,EAAiB,CACnBjD,SAAU,GACVK,aAAc,OACdC,OAAQ,OACRC,QAAS,QACTC,MAAO,OAGL0C,EAAe,CACjB3C,QAAS,eACTP,SAAU,OACVM,OAAQ,SACRD,aAAc,QACd8C,UAAW,OACX3C,MAAO,SAuBX,MAAwB,UAApBM,KAAK7D,MAAM+F,KAIXrD,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YAAYL,MAxBD,CACnBQ,QAAS,UAwBLZ,EAAAC,EAAAC,cAAA,SAAOuD,IAAI,cAAcC,YAAY,iBAAiBtD,MAAOkD,EAAgBK,SAAUxC,KAAKU,kBAAmBD,MAAOT,KAAKiC,MAAMtB,iBACjI9B,EAAAC,EAAAC,cAAA,YAAUO,GAAG,WAAWgD,IAAI,aAAaG,KAAK,KAAKC,KAAK,KAAKH,YAAY,0BAA0B9B,MAAOT,KAAKiC,MAAM1B,cAAetB,MAAOkD,EAAgBK,SAAUxC,KAAKI,mBAC1KvB,EAAAC,EAAAC,cAAA,UAAQ4D,QAAS3C,KAAKY,SAAU3B,MAAOmD,GAAvC,QAGwB,SAApBpC,KAAK7D,MAAM+F,KAIfrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,MA/BI,CACjB2D,OAAQ,kBACR1D,SAAU,GACVK,aAAc,OACd8C,UAAW,QACX7C,OAAQ,OACRC,QAAS,QACTC,MAAO,MACPP,UAAW,SAwBCN,EAAAC,EAAAC,cAAC8D,EAAD,CAAaxD,MAAOW,KAAK7D,MAAMkD,MAAOX,KAAMsB,KAAK7D,MAAMuC,KAAMpC,WAAY0D,KAAK7D,MAAMG,cAEzFuC,EAAAC,EAAAC,cAAA,UAAQE,MAAOmD,EAAcO,QAAS3C,KAAKqB,UAA3C,QACAxC,EAAAC,EAAAC,cAAA,UAAQE,MAAOmD,EAAcO,QAAS3C,KAAKsB,UAA3C,SAGoB,UAApBtB,KAAK7D,MAAM+F,KAElBrD,EAAAC,EAAAC,cAAA,MAAIE,MA5BkB,CACtBG,WAAY,SA2BZ,eAFG,SA1GM0D,IAAMC,WC4CZC,EA7CO,SAAC7G,GAEvB,IAAI8G,EAAY,CACZC,cAAe,QAYbC,EAAY,CACdjE,SAAU,QAGRkE,EAAe,CACjBC,cAAe,QAGnB,GAAyB,KAArBlH,EAAMmH,WAEV,IAAIC,EAAapH,EAAMmH,WAAWvF,IAAI,SAASyF,EAAMvF,GACjD,OACIY,EAAAC,EAAAC,cAAA,OAAKC,IAAKwE,EAAKC,KAAMxE,MAAOmE,GACxBvE,EAAAC,EAAAC,cAAA,MAAIE,MAAOgE,GACPpE,EAAAC,EAAAC,cAAA,UAAKyE,EAAKC,MACV5E,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,MAAOkE,EAAWO,KAAK,KAAKf,QAASxG,EAAMwH,WAAYrE,GAAIkE,EAAKnE,OAAQmE,EAAKnE,YAOpG,OACIR,EAAAC,EAAAC,cAAA,OAAKE,MAhCgB,CACrBM,aAAc,SAgCVV,EAAAC,EAAAC,cAAA,MAAIE,MA7BS,CACjBG,WAAY,OACZiE,cAAe,SA2BX,gBACAxE,EAAAC,EAAAC,cAAA,WAAMwE,qCCJCK,SAjCU,SAACzH,GAGtB,GAAIA,EAAM0H,UAAUjF,SAAS,SAAY,IAAIkF,EADjC,eAEJA,EAFuB,YAG/B,GAAI3H,EAAM0H,UAAUjF,SAAS,SAAY,IAAImF,EAHjC,eAIJA,EAJuB,YAK/B,GAAI5H,EAAM0H,UAAUjF,SAAS,cAAiB,IAAIoF,EALtC,eAMJA,EANuB,YAO/B,OACInF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAaC,UAAQ,GACnBrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQC,QAASN,EAAUnB,QAAS,kBAAIxG,EAAMkI,MAAM,WAApD,SACAxF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQC,QAASL,EAAUpB,QAAS,kBAAIxG,EAAMkI,MAAM,WAApD,SACAxF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQC,QAASJ,EAASrB,QAAS,kBAAIxG,EAAMkI,MAAM,gBAAnD,eAEFxF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACuF,EAAA,EAAKC,MAAN,KACE1F,EAAAC,EAAAC,cAACuF,EAAA,EAAKE,QAAN,CAAcC,KAAK,OAAOlC,YAAY,aAAaC,SAAUrG,EAAMuI,gBAErE7F,EAAAC,EAAAC,cAACuF,EAAA,EAAKC,MAAN,KACE1F,EAAAC,EAAAC,cAACuF,EAAA,EAAKK,MAAN,CACEF,KAAK,WACLG,MAAM,2BACNpC,SAAUrG,EAAM0I,8CCgBnBC,EA1CS,SAAC3I,GACrB,IAAI4I,EAAW,CAAC,OAChB,GAAI5I,EAAM6I,MAAMpG,SAAS,SACrB,IAAK,IAAIvC,KAAKF,EAAM8I,MAAM1I,MACtBwI,EAASpI,KAAKR,EAAM8I,MAAM1I,MAAMF,GAAG6I,SAG3C,GAAI/I,EAAM6I,MAAMpG,SAAS,SACrB,IAAKvC,KAAKF,EAAM8I,MAAMpI,MAClBkI,EAASpI,KAAKR,EAAM8I,MAAMpI,MAAMR,GAAG6I,SAG3C,GAAI/I,EAAM6I,MAAMpG,SAAS,cACrB,IAAKvC,KAAKF,EAAM8I,MAAM9H,WAClB4H,EAASpI,KAAKR,EAAM8I,MAAM9H,WAAWd,GAAG6I,SAOhD,OAJAH,EAAWA,EAASI,OAAO,SAAAC,GAAC,OAAEjJ,EAAMkJ,gBACH,IAA7BD,EAAEE,QAAQnJ,EAAMoJ,WAAgBH,EAAExG,SAASzC,EAAMoJ,aACjDC,OAAOzH,IAAI,SAAAqH,GAAC,OAAIvG,EAAAC,EAAAC,cAAA,QAAMC,IAAKoG,GAAIA,EAAEvG,EAAAC,EAAAC,cAAA,cAGjCF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACI5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACG9G,EAAAC,EAAAC,cAAC6G,EAAD,CACE/B,UAAW1H,EAAM6I,MACjBX,MAAOlI,EAAM0J,YACbnB,aAAcvI,EAAMuI,aACpBG,eAAgB1I,EAAM0I,kBAG3BhG,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACG9G,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YAAWT,EAAAC,EAAAC,cAAA,SAAIgG,SCL7Be,SA/BE,SAAC3J,GAEhB,GAAwB,YAApBA,EAAM4J,UACN,IAAIC,EAAmB7J,EAAM8J,MAAMf,QAC/BgB,EAAiB/J,EAAM8J,MAAMvJ,aAE/BsJ,EAAmB7J,EAAM8J,MAAMvJ,QAC/BwJ,EAAiB/J,EAAM8J,MAAMf,QAGnC,IAAIiB,EAAcD,EAAetI,cAAcwI,MAAM,KACjDC,EAA8B,KAAlBlK,EAAMmK,QAAiBzH,EAAAC,EAAAC,cAAA,8BACjC5C,EAAMmK,QAAQF,MAAM,KAAKrI,IAAI,SAACqH,EAAG/I,GACjC,OAAI+I,EAAExH,gBAAkBuI,EAAY9J,GACzBwC,EAAAC,EAAAC,cAAA,QAAMwH,UAAU,WAAWvH,IAAK3C,GAAI+I,EAAE,KAE1CvG,EAAAC,EAAAC,cAAA,QAAMwH,UAAU,UAAUvH,IAAK3C,GAAI+I,EAAE,OAIlD,OACIvG,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,KAAGO,GAAG,YAAY0G,GAClBnH,EAAAC,EAAAC,cAAA,OAAKO,GAAG,UAAU+G,GAClBxH,EAAAC,EAAAC,cAAA,SAAO0F,KAAK,OAAOhE,MAAOtE,EAAMmK,QAAS9D,SAAUrG,EAAMqK,YACzD3H,EAAAC,EAAAC,cAAA,UAAQ4D,QAASxG,EAAMsK,iBAAvB,8BCLKC,EAAc,SAACC,GACxB,IAAIC,EAzBQ,SAACC,GACb,IAAIxK,EAAIyK,KAAKC,MAAMD,KAAKE,SAASH,EAAIrK,QACrC,MAAO,CAAC0I,QAAQ2B,EAAIxK,GAAG6I,QAASxI,QAAQmK,EAAIxK,GAAGK,QAASuK,OAAOJ,EAAIxK,GAAG4K,QAuB1DC,CAAQP,EAAMpK,OAGtB4K,EAVO,SAACN,EAAKI,GACjB,IAAI5K,EAAIyK,KAAKC,MAAMD,KAAKE,SAASH,EAAIrK,QACrC,MAAO,CAAC0I,QAAQ2B,EAAIxK,GAAG6I,QAASxI,QAAQmK,EAAIxK,GAAGK,QAAQuK,IAQ5CG,CAAOT,EAAMxJ,WAAYyJ,EAAMK,QAM1C,MAAO,CAAC/B,QALc,OAAO0B,EAAM1B,QAAS,OAAQiC,EAAKjC,QAKxBxI,QAHpBiK,EAAMhJ,WAAWjB,QAAQkK,EAAMK,QACd,IAAIL,EAAMlK,QAAS,OAAQyK,EAAKzK,UChC5D2K,aACF,SAAAA,EAAYC,GAAMxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,GACdrH,KAAKkF,QAAUoC,oDAEPC,GACRvH,KAAKwH,SAAWD,kBAGhB,OAAOvH,KAAKwH,sCAELC,GACPzH,KAAK0H,QAAUD,kBAGf,OAAOzH,KAAK0H,iBAIdC,aACF,SAAAA,EAAYL,GAAMxH,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,GACd3H,KAAKkF,QAAUoC,uDAGJC,GACXvH,KAAK4H,YAAcL,kBAGnB,OAAOvH,KAAK4H,0CAGJf,GAEW,IAAfA,EAAIrK,SACJwD,KAAK6H,SAAWC,MAAMC,KAAKlB,oBAO/B,OAAO7G,KAAK6H,8CAGGhB,GACI,IAAfA,EAAIrK,SACJwD,KAAKgI,gBAAkBF,MAAMC,KAAKlB,oBAKtC,OAAO7G,KAAKgI,yBAIdC,aACF,SAAAA,EAAYX,GAAMxH,OAAAC,EAAA,EAAAD,CAAAE,KAAAiI,GACdjI,KAAKkF,QAAUoC,oDAGPT,GAMR7G,KAAKwH,SAAW,CAACjK,KAAKsJ,EAAI,GAAIxJ,OAAOwJ,EAAI,GAAIpJ,OAAOoJ,EAAI,oBAIxD,OAAO7G,KAAKwH,kBAIhBU,EAAO,IAAIb,EAAK,QACpBa,EAAKxL,QAAU,OACfwL,EAAKjB,OAAS,SACd,IAAIkB,EAAO,IAAId,EAAK,QACpBc,EAAKzL,QAAU,OACfyL,EAAKlB,OAAS,SACd,IAAImB,EAAM,IAAIf,EAAK,OACnBe,EAAI1L,QAAU,MACd0L,EAAInB,OAAS,OACb,IAAIoB,EAAQ,IAAIhB,EAAK,SACrBgB,EAAM3L,QAAU,OAChB2L,EAAMpB,OAAS,OACf,IAAIqB,EAAS,IAAIjB,EAAK,UACtBiB,EAAO5L,QAAU,QACjB4L,EAAOrB,OAAS,OAChB,IAAIsB,EAAO,IAAIlB,EAAK,QACpBkB,EAAK7L,QAAU,QACf6L,EAAKtB,OAAS,OACd,IAAIuB,EAAM,IAAInB,EAAK,OACnBmB,EAAI9L,QAAU,SACd8L,EAAIvB,OAAS,SACb,IAAIwB,EAAQ,IAAIpB,EAAK,SACrBoB,EAAM/L,QAAU,OAChB+L,EAAMxB,OAAS,SACf,IAAIyB,EAAM,IAAIrB,EAAK,OACnBqB,EAAIhM,QAAU,MACdgM,EAAIzB,OAAS,OACb,IAAI0B,EAAM,IAAItB,EAAK,OACnBsB,EAAIjM,QAAU,OACdiM,EAAI1B,OAAS,SACb,IAAI2B,EAAO,IAAIvB,EAAK,QACpBuB,EAAKlM,QAAU,QACfkM,EAAK3B,OAAS,OACd,IAAI4B,EAAW,IAAIxB,EAAK,YACxBwB,EAASnM,QAAU,YACnBmM,EAAS5B,OAAS,SAClB,IAAI6B,EAAQ,IAAIzB,EAAK,SACrByB,EAAMpM,QAAU,MAChBoM,EAAM7B,OAAS,SAEf,IAAI8B,EAAO,IAAIpB,EAAK,SACpBoB,EAAKhM,WAAa,MAClBgM,EAAKC,QAAU,CAAC,KAAM,MAAO,KAAM,MAAO,MAAO,OACjDD,EAAK/L,eAAiB,CAAC,OAAQ,MAAO,KAAM,OAAQ,OAAQ,QAC5D,IAAIiM,EAAO,IAAItB,EAAK,SACpBsB,EAAKlM,WAAa,QAClBkM,EAAKD,QAAU,CAAC,KAAM,KAAM,OAAO,KAAK,KAAK,MAC7CC,EAAKjM,eAAiB,CAAC,QAAS,QAAS,OAAQ,SAAU,SAAU,UAGrE,IAAIkM,EAAQ,IAAIjB,EAAU,SAC1BiB,EAAMxM,QAAU,CAAC,QAAS,QAAS,SACnC,IAAIyM,EAAM,IAAIlB,EAAU,OACxBkB,EAAIzM,QAAU,CAAC,QAAS,QAAS,SACjC,IAAI0M,EAAQ,IAAInB,EAAU,SAC1BmB,EAAM1M,QAAU,CAAC,OAAQ,OAAQ,QACjC,IAAI2M,EAAQ,IAAIpB,EAAU,SAC1BoB,EAAM3M,QAAU,CAAC,QAAS,QAAS,SACnC,IAAI4M,EAAO,IAAIrB,EAAU,QACzBqB,EAAK5M,QAAU,CAAC,QAAS,QAAS,SAClC,IAAI6M,EAAQ,IAAItB,EAAU,SAC1BsB,EAAM7M,QAAU,CAAC,SAAU,SAAU,UACrC,IAAI8M,EAAY,IAAIvB,EAAU,aAC9BuB,EAAU9M,QAAU,CAAC,SAAU,SAAU,UACzC,IAAI+M,EAAU,IAAIxB,EAAU,WAC5BwB,EAAQ/M,QAAU,CAAC,SAAU,SAAU,UACvC,IAAIgN,EAAS,IAAIzB,EAAU,UAC3ByB,EAAOhN,QAAU,CAAC,QAAS,QAAS,SACpC,IAAIiN,EAAO,IAAI1B,EAAU,QACzB0B,EAAKjN,QAAU,CAAC,UAAW,UAAW,WACtC,IAAIkN,EAAM,IAAI3B,EAAU,OACxB2B,EAAIlN,QAAU,CAAC,QAAS,QAAS,SAG1B,IAAIqI,GAAW,CAClBpH,WAAa,CAACuH,QAAS,MAAOxI,QAAS,CAACa,KAAK,MAAOF,OAAO,KAAMI,OAAO,OACxElB,MAAQ,CAAC2L,EAAMC,EAAMC,EAAKC,EAAOC,EAAQG,EAAOC,EAAKH,EAAMC,EAAKG,EAAKC,EAAMC,EAAUC,GACrFjM,MAAQ,CAACkM,EAAME,GACf9L,WAAa,CAAC+L,EAAOC,EAAKC,EAAOC,EAAOC,EAAMC,EAAOC,EAAWC,EAASC,EAAQC,EAAMC,8BCgB5EC,8MA3Jb5H,MAAQ,CACN3F,WAAayI,GACb+E,YAAc,CAAC,QAAS,QAAS,cACjCC,gBAAkB,UAClBC,WAAY,GACZC,UAAWvD,EAAY3B,IACvBmF,UAAW,WACX5G,WAAY,GACZ5E,KAAM,GACNW,MAAO,GACP8K,WAAY,QACZC,gBAAiB,GACjB/E,iBAAiB,KAGnBgF,aAAe,SAACC,GACd,IAAIC,EAASzC,MAAMC,KAAKlI,EAAKoC,MAAM6H,aAC/BS,EAAO3L,SAAS0L,GAClBC,EAASA,EAAOpF,OAAO,SAAAC,GAAC,OAAIA,IAAIkF,IAC1BC,EAAO5N,KAAK2N,GACpBzK,EAAKS,SAAS,CAACwJ,YAAaS,OAG9BC,kBAAoB,WAClB,GAAmC,YAA/B3K,EAAKoC,MAAM8H,gBACb,IAAIU,EAAU,aACRA,EAAU,UAClB5K,EAAKS,SAAS,CAACyJ,gBAAiBU,OAGlCC,oBAAsB,SAACrK,GACrB,GAAmC,YAA/BR,EAAKoC,MAAM8H,gBACb,IAAIY,EAAM9K,EAAKoC,MAAMgI,UAAUvN,aACzBiO,EAAM9K,EAAKoC,MAAMgI,UAAU/E,QACnC0F,QAAQC,IAAIF,EAAK9K,EAAKoC,MAAM+H,YACxB3J,EAAMG,OAAOC,MAAM7C,gBAAkB+M,EAAI/M,cAC3CiC,EAAKS,SAAS,CAAC2J,UAAWvD,EAAY7G,EAAKoC,MAAM3F,YAAa0N,WAAW,KAClEnK,EAAKS,SAAS,CAAC0J,WAAW3J,EAAMG,OAAOC,WAGlDa,SAAW,SAACmC,EAAMpE,EAAOX,GAEvB,IAAIoM,EAAa,CACfrH,KAAMA,EACNpE,MAAOA,EACPX,KAAMA,GAGRmB,EAAKkL,mBAAmBD,MAG1BC,mBAAqB,SAACC,GACpB,IAAI1H,EAEsC,MAAtC2H,aAAaC,QAAQ,eACvB5H,EAAa6H,KAAKC,MAAMH,aAAaC,QAAQ,gBAClCvO,KAAKqO,IAEhB1H,EAAa,IACF3G,KAAKqO,GAElBC,aAAaI,QAAQ,aAAcF,KAAKG,UAAUhI,IAClDzD,EAAK0L,wBAGPA,mBAAqB,WACnB,GAA0C,MAAtCN,aAAaC,QAAQ,cAAuB,CAC9C,IAAI5H,EAAa6H,KAAKC,MAAMH,aAAaC,QAAQ,eACjDrL,EAAKS,SACH,CAACgD,WAAYA,SAGbzD,EAAKS,SACH,CAACgD,WAAY,QAKrBK,WAAa,SAAC6H,GACZ,IAAIC,EAAYD,EAAEhL,OAAOlB,GAErBoM,EADoB7L,EAAKoC,MAAMqB,WAAW6B,OAAO,SAAAzG,GAAI,OAAIA,EAAKW,QAAUoM,IACvC,GAAG/M,KACxCmB,EAAKS,SAAS,CAAC4J,UAAW,SAAUC,WAAY,OAAQzL,KAAMgN,EAAcrM,MAAOoM,IACnFD,EAAEG,oBAGJC,iBAAmB,SAAC1J,GAClBrC,EAAKS,SACH,CAAC6J,WAAYjI,OAIjBhB,WAAa,SAACxC,GACZmB,EAAKS,SACH,CAAC5B,KAAMA,OAIXyC,YAAc,SAAC9B,GACbQ,EAAKS,SACH,CAACjB,MAAOA,OAGZwM,iBAAmB,SAACxL,GAClBR,EAAKS,SAAS,CAAC8J,gBAAgB/J,EAAMG,OAAOC,WAG9CqL,mBAAqB,SAACzL,GACpBR,EAAKS,SAAS,CAAC+E,iBAAiBxF,EAAKoC,MAAMoD,2FAGpC,IAAA0G,EAAA/L,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,OACb1H,EAAAC,EAAAC,cAAA,MAAIwH,UAAU,cAAd,YACA1H,EAAAC,EAAAC,cAACiN,GAAA,EAAD,CACEC,UAAWjM,KAAKiC,MAAMiI,UACtBgC,SAAU,SAAAlN,GAAG,OAAI+M,EAAKzL,SAAS,CAAC4J,UAAUlL,KAC1CoF,QAAU,QACV+H,MAAI,GAENtN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAKC,SAAS,SAAShN,MAAM,gBAC3BR,EAAAC,EAAAC,cAACuN,EAAD,CAAQhQ,WAAY0D,KAAKiC,MAAM3F,WAAYgF,SAAUtB,KAAKsB,SAAUY,KAAMlC,KAAKiC,MAAMkI,WAAY/I,WAAYpB,KAAK4L,iBAAkB1K,WAAYlB,KAAKkB,WAAYC,YAAanB,KAAKmB,YAAazC,KAAMsB,KAAKiC,MAAMvD,KAAMW,MAAOW,KAAKiC,MAAM5C,SAE3OR,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAKC,SAAS,gBAAgBhN,MAAM,eAClCR,EAAAC,EAAAC,cAACwN,EAAD,CAAejJ,WAAYtD,KAAKiC,MAAMqB,WAAYK,WAAY3D,KAAK2D,cAErE9E,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAKC,SAAS,WAAWhN,MAAM,eAC7BR,EAAAC,EAAAC,cAACyN,EAAD,CACEvH,MAAOjF,KAAKiC,MAAM3F,WAClB0I,MAAOhF,KAAKiC,MAAM6H,YAClBjE,YAAa7F,KAAKqK,aAClB9E,UAAWvF,KAAKiC,MAAMmI,gBACtB1F,aAAc1E,KAAK6L,iBACnBxG,gBAAiBrF,KAAKiC,MAAMoD,gBAC5BR,eAAgB7E,KAAK8L,sBAGzBjN,EAAAC,EAAAC,cAACqN,GAAA,EAAD,CAAKC,SAAS,WAAWhN,MAAM,uBAC7BR,EAAAC,EAAAC,cAAC0N,EAAD,CACExH,MAAOjF,KAAKiC,MAAM3F,WAClByJ,UAAW/F,KAAKiC,MAAM8H,gBACtBtD,gBAAiBzG,KAAKwK,kBACtBlE,QAAStG,KAAKiC,MAAM+H,WACpB/D,MAAOjG,KAAKiC,MAAMgI,UAClBzD,UAAWxG,KAAK0K,gCAlJV5H,IAAMC,WCCJ2J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlO,MACvB,2DCZNmO,IAASC,OAAOlO,EAAAC,EAAAC,cAACiO,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4de72967.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst GrabbedText = (props) => {\r\n\r\n    let knownNouns = []\r\n    for (let i = 0; i < props.knownWords.nouns.length; i++) {\r\n        let foreignNoun = props.knownWords.nouns[i].foreign\r\n        knownNouns.push(foreignNoun)\r\n    }\r\n\r\n    let knownVerbs = []\r\n    for (let i = 0; i < props.knownWords.verbs.length; i++) {\r\n        let foreignInfinitive = props.knownWords.verbs[i].infinitive\r\n        knownVerbs.push(foreignInfinitive)\r\n        let presentForeign = props.knownWords.verbs[i].presentForeign\r\n        knownVerbs = knownVerbs.concat(presentForeign)\r\n    }\r\n\r\n    let knownAdjectives = []\r\n    for (let i = 0; i < props.knownWords.adjectives.length; i++) {\r\n        let foreignAdjectiveFemale = props.knownWords.adjectives[i].foreign.female\r\n        let foreignAdjectiveMale = props.knownWords.adjectives[i].foreign.male\r\n        let foreignAdjectiveNeuter = props.knownWords.adjectives[i].foreign.neuter\r\n        knownAdjectives.push(foreignAdjectiveFemale, foreignAdjectiveMale, foreignAdjectiveNeuter)\r\n    }\r\n\r\n    let knownDefArticles = []\r\n    knownDefArticles.push(props.knownWords.defArticle.foreign.male.toLowerCase())\r\n    knownDefArticles.push(props.knownWords.defArticle.foreign.female.toLowerCase())\r\n    knownDefArticles.push(props.knownWords.defArticle.foreign.neuter.toLowerCase())\r\n\r\n    let allKnownWords = []\r\n\r\n    allKnownWords = allKnownWords.concat(knownNouns, knownVerbs, knownAdjectives, knownDefArticles)\r\n\r\n    let allKnownWordsUpperFirstChar = allKnownWords.map(function(word, index) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1)\r\n    })\r\n\r\n    let allKnownWordsUpperAll = allKnownWords.map(function(word, index) {\r\n        return word.toUpperCase()\r\n    })\r\n\r\n        const divStyle = {\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '100%',\r\n            padding: '20px'\r\n        }\r\n\r\n        const titleStyle = {\r\n            fontSize: 30,\r\n            textAlign: 'center',\r\n            paddingTop: 20\r\n        }\r\n\r\n        const knownWordStyle = {\r\n            color: 'green'\r\n        }\r\n\r\n        const unknownWordStyle = {\r\n            color: 'red'\r\n        }\r\n\r\n        var splitText = props.text.match(/\\w+|\\s+|[^\\s\\w]+/g)\r\n\r\n        let newWordArray = splitText.map(function (word, index) {\r\n            if (!word.match(/\\w+/g)) {\r\n                return word\r\n            } else {\r\n                \r\n            if (allKnownWords.includes(word) || allKnownWordsUpperFirstChar.includes(word) || allKnownWordsUpperAll.includes(word)) {\r\n            \r\n            return (\r\n                <span key={word+index} style = {knownWordStyle}>{word}</span>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                <span key={word+index} style={unknownWordStyle}>{word}</span>\r\n            )\r\n        }\r\n    }\r\n    }\r\n    )\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={titleStyle}>{props.title}</h2>\r\n                <div id='grabbedText' style = {divStyle}>{newWordArray}</div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default GrabbedText\r\n","import React from 'react'\r\nimport GrabbedText from './GrabbedText'\r\n\r\nclass Reader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mode: this.props.mode,\r\n            userTitleInput: '',\r\n            userTextInput: '',\r\n            title: '',\r\n            text: props.text\r\n        }\r\n    }\r\n\r\n    handleChangeText = (event) => {\r\n        this.setState(\r\n            {userTextInput: event.target.value}\r\n        )\r\n    }\r\n\r\n    handleChangeTitle = (event) => {\r\n        this.setState(\r\n            {userTitleInput: event.target.value}\r\n        )\r\n    }\r\n\r\n    grabText = () => {\r\n\r\n        let pastedText = this.refs.myTextArea.value\r\n        let newTitle = this.refs.myTitleArea.value\r\n        this.props.updateText(pastedText)\r\n        this.props.updateTitle(newTitle)\r\n        this.props.updateMode('read')\r\n    }\r\n\r\n    editText = () => {\r\n        this.props.updateMode('paste')\r\n    }\r\n\r\n    saveText = () => {\r\n        var d = new Date()\r\n        var dateString = d.getHours() + ':' + d.getMinutes() + ' ' + d.getDate() + '/' + (d.getMonth()+1) + '/' + d.getFullYear().toString().substr(-2)\r\n        this.props.saveText(dateString, this.props.title, this.props.text)\r\n        this.props.updateMode('saved')\r\n    }\r\n   \r\n    render() {\r\n\r\n        const textAreaStyles = {\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '60%'\r\n        }\r\n        \r\n        const buttonStyles = {\r\n            display: 'inline-block',\r\n            fontSize: '25px',\r\n            margin: '0 auto',\r\n            marginBottom: '100px',\r\n            marginTop: '20px',\r\n            width: '100px'\r\n        }\r\n        \r\n        const mainAreaStyles = {\r\n            display: 'block'\r\n        }\r\n\r\n        const textBoxStyle = {\r\n            border: '2px solid black',\r\n            fontSize: 20,\r\n            marginBottom: '20px',\r\n            marginTop: '100px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '60%',\r\n            textAlign: 'left'\r\n            \r\n        }\r\n\r\n        const savedMessageStyle = {\r\n            paddingTop: '50px'\r\n        }\r\n\r\n        if (this.props.mode === 'paste'){\r\n\r\n        return (\r\n\r\n            <div id='main-area' style={mainAreaStyles}>\r\n                <input ref='myTitleArea' placeholder='Enter title...' style={textAreaStyles} onChange={this.handleChangeTitle} value={this.state.userTitleInput}></input>\r\n                <textarea id='textArea' ref='myTextArea' rows='20' cols='80' placeholder='Paste your text here...' value={this.state.userTextInput} style={textAreaStyles} onChange={this.handleChangeText}></textarea>\r\n                <button onClick={this.grabText} style={buttonStyles}>Go!</button>\r\n            </div>\r\n\r\n        )} else if (this.props.mode === 'read') {\r\n\r\n            return (\r\n\r\n                <div>\r\n                    <div style={textBoxStyle}>\r\n                        <GrabbedText title={this.props.title} text={this.props.text} knownWords={this.props.knownWords}/>\r\n                    </div>\r\n                   <button style={buttonStyles} onClick={this.editText}>Edit</button>\r\n                   <button style={buttonStyles} onClick={this.saveText}>Save</button>\r\n                </div>\r\n            )\r\n        } else if (this.props.mode === 'saved') {\r\n            return (\r\n            <h2 style={savedMessageStyle}>Saved!</h2>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Reader ","import React from 'react'\r\n\r\nconst TextCatalogue = (props) => {\r\n\r\nvar listStyle = {\r\n    listStyleType: 'none'\r\n}\r\n\r\nvar textCatalogueStyle = {\r\n    marginBottom: '50px'\r\n}\r\n\r\nconst headingStyle = {\r\n    paddingTop: '50px',\r\n    paddingBottom: '25px'\r\n}\r\n\r\nconst linkStyle = {\r\n    fontSize: '30px'\r\n}\r\n\r\nconst linkDivStyle = {\r\n    paddingBottom: '25px'\r\n}\r\n\r\nif (props.savedTexts !== '') {\r\n\r\nvar textsArray = props.savedTexts.map(function(item, index){\r\n    return (\r\n        <div key={item.date} style={linkDivStyle}>\r\n            <ul style={listStyle}>\r\n                <li>{item.date}</li>\r\n                <li><a style={linkStyle} href='#/' onClick={props.goToReader} id={item.title}>{item.title}</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n}\r\n\r\nreturn (\r\n    <div style={textCatalogueStyle}>\r\n        <h2 style={headingStyle}>Your texts: </h2>\r\n        <div>{textsArray}</div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default TextCatalogue","import React from 'react';\r\nimport './Wordlist.css';\r\nimport {Button, ButtonGroup, Form} from  'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst WordListCheckbox = (props) => {\r\n    // these will be toggle buttons not checkboxes\r\n    var onBtn = \"success\",  offBtn='secondary';\r\n    if (props.selection.includes('Nouns')) { var nounsBtn = onBtn }\r\n      else {nounsBtn = offBtn}\r\n    if (props.selection.includes('Verbs')) { var verbsBtn = onBtn }\r\n      else {verbsBtn = offBtn}\r\n    if (props.selection.includes('Adjectives')) { var adjBtn = onBtn }\r\n      else {adjBtn = offBtn}\r\n    return (\r\n        <div>\r\n            <h2>Types of words</h2>\r\n            <ButtonGroup vertical>            \r\n              <Button variant={nounsBtn} onClick={()=>props.click('Nouns')} >Nouns</Button>\r\n              <Button variant={verbsBtn} onClick={()=>props.click('Verbs')} >Verbs</Button>\r\n              <Button variant={adjBtn}  onClick={()=>props.click('Adjectives')}>Adjectives</Button>\r\n            </ButtonGroup>\r\n            <p></p>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Control type='text' placeholder='search for' onChange={props.changeSearch} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Check \r\n                  type='checkbox' \r\n                  label='Must be at start of word'\r\n                  onChange={props.changeCheckBox} />\r\n              </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordListCheckbox;","import React from 'react';\r\nimport WordListCheckbox from './WordListCheckbox';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst WordListDisplay = (props) =>  {\r\n    var wordList = ['the'];\r\n    if (props.types.includes('Nouns')) {\r\n        for (var i in props.words.nouns) {\r\n            wordList.push(props.words.nouns[i].english)\r\n        }\r\n    }\r\n    if (props.types.includes('Verbs')) {\r\n        for (i in props.words.verbs) {\r\n            wordList.push(props.words.verbs[i].english)\r\n        }\r\n    }\r\n    if (props.types.includes('Adjectives')) {\r\n        for (i in props.words.adjectives) {\r\n            wordList.push(props.words.adjectives[i].english)\r\n        }\r\n    }\r\n    wordList = wordList.filter(x=>props.searchFromStart?\r\n        x.indexOf(props.searchFor)===0 :x.includes(props.searchFor))\r\n       .sort().map(x => <span key={x}>{x}<br /></span>);\r\n    \r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                  <Col>\r\n                     <WordListCheckbox \r\n                       selection={props.types} \r\n                       click={props.changeTypes}\r\n                       changeSearch={props.changeSearch}\r\n                       changeCheckBox={props.changeCheckBox}\r\n                     />\r\n                  </Col>\r\n                  <Col>\r\n                     <div id=\"wordList\"><p>{wordList}</p></div>\r\n                  </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordListDisplay;","import React from 'react';\r\nimport './TestPage.css'\r\n\r\nconst TestPage = (props) => {  \r\n    \r\n  if (props.transMode === 'fromEng') {\r\n      var questionSentence = props.testQ.english;\r\n      var answerSentence = props.testQ.foreign;\r\n    } else {\r\n        questionSentence = props.testQ.foreign;\r\n        answerSentence = props.testQ.english;\r\n  }   \r\n\r\n  var answerWords = answerSentence.toLowerCase().split(' ');\r\n  var markedAns = props.userAns === '' ? <span>Give an Answer</span> \r\n      : props.userAns.split(' ').map((x, i) => {\r\n        if (x.toLowerCase() === answerWords[i]) {\r\n            return <span className='goodWord' key={i}>{x+' '}</span>\r\n        }\r\n        return <span className='badWord' key={i}>{x+' '}</span>\r\n        })\r\n\r\n  \r\n  return (\r\n      <div id='testpage'>\r\n        <h2>Translate the following</h2>\r\n        <p id='question'>{questionSentence}</p>\r\n        <div id='answer'>{markedAns}</div>\r\n        <input type='text' value={props.userAns} onChange={props.changeAns} />\r\n        <button onClick={props.switchModeClick}>Translate the other way</button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TestPage;","const rndNoun = (arr) => {\r\n    var i = Math.floor(Math.random()*arr.length);\r\n    return {english:arr[i].english, foreign:arr[i].foreign, gender:arr[i].gender}\r\n}\r\n\r\n// so far only tense in vocab.js is 'present'\r\n// nb: person is zero-indexed [1stSing, 2ndSing, 3rdSing, 1stPlur, 2ndPlur, 3rdPlur]\r\n\r\n// ********************\r\n// currently no use for rndVerb, so commented out\r\n// const rndVerb = (arr, tense, person) => {\r\n//     var i = Math.floor(Math.random()*arr.length);\r\n//     return {english:arr[i][tense][person], foreign: arr[i][tense+'Foreign'][person]}\r\n// }\r\n\r\n\r\n// gender is stored as an array [male, female, neuter]\r\n// not fully implemented, because the gender of nouns is not currently stored\r\nconst rndAdj = (arr, gender) => {\r\n    var i = Math.floor(Math.random()*arr.length);\r\n    return {english:arr[i].english, foreign:arr[i].foreign[gender]}  \r\n}\r\n\r\n\r\nexport const rndSentence = (wList) => {\r\n    var noun1 = rndNoun(wList.nouns);      \r\n    //currently no use for verb in sentence\r\n    //var verb1 = rndVerb(wList.verbs, 'present', 2);\r\n    var adj1 = rndAdj(wList.adjectives, noun1.gender); //masculine because gender not currently defined\r\n    var englishSentence = 'The '+noun1.english +' is '+ adj1.english;\r\n    //NB: 'the' needs to match gender too\r\n    var defArt = wList.defArticle.foreign[noun1.gender];\r\n    var foreignSentence = defArt +' '+noun1.foreign +' je '+ adj1.foreign;\r\n\r\n    return {english:englishSentence, foreign:foreignSentence}\r\n}","class Noun {\r\n    constructor(eng) {\r\n        this.english = eng;\r\n    }\r\n    set foreign(f) {\r\n        this._foreign = f;\r\n    } \r\n    get foreign() {\r\n        return this._foreign;\r\n    }\r\n    set gender(g) {\r\n        this._gender = g;\r\n    }\r\n    get gender() {\r\n        return this._gender;\r\n    }\r\n}\r\n\r\nclass Verb {\r\n    constructor(eng) {\r\n        this.english = eng;\r\n    }\r\n    \r\n    set infinitive(f) {\r\n        this._infinitive = f\r\n    }\r\n    get infinitive() {\r\n        return this._infinitive\r\n    }\r\n\r\n    set present(arr) {\r\n        // the array will list the present tense in order [first, you, he, we, you2, they]\r\n        if (arr.length === 6) {\r\n            this._present = Array.from(arr)\r\n        } else {/*need to throw an error */}\r\n    }\r\n    // this is untidy, but you get present tense \r\n    // you get the whole array of 6\r\n    // first person is zero-th element of array\r\n    get present() {\r\n        return this._present;\r\n    }\r\n\r\n    set presentForeign(arr) {\r\n        if (arr.length === 6) {\r\n            this._presentForeign = Array.from(arr)\r\n        } else {/*need to throw an error */}\r\n    }\r\n\r\n    get presentForeign() {\r\n        return this._presentForeign\r\n    }\r\n}\r\n\r\nclass Adjective {\r\n    constructor(eng) {\r\n        this.english = eng\r\n    }\r\n\r\n    set foreign(arr) {\r\n        // eventually: I would like this to be [stem, group]\r\n        // This will allow calculation of the foreign adjective for regular adjectives\r\n        // but currently it is [male, female, neuter]\r\n        // actually: using the same structure as the defArticle will simplify the creation of \r\n        // a test sentence. So send an array to this method, it will create an object\r\n        this._foreign = {male:arr[0], female:arr[1], neuter:arr[2]}\r\n    }\r\n\r\n    get foreign() {\r\n        return this._foreign\r\n    }\r\n}\r\n\r\nvar beer = new Noun('beer');\r\nbeer.foreign = 'pivo';\r\nbeer.gender = 'neuter';\r\nvar wine = new Noun('wine');\r\nwine.foreign = 'vino';\r\nwine.gender = 'neuter';\r\nvar dog = new Noun('dog');\r\ndog.foreign = 'pes';\r\ndog.gender = 'male';\r\nvar table = new Noun('table');\r\ntable.foreign = 'stul';\r\ntable.gender = 'male';\r\nvar banana = new Noun('banana');\r\nbanana.foreign = 'banan';\r\nbanana.gender = 'male';\r\nvar tree = new Noun('tree');\r\ntree.foreign = 'strom';\r\ntree.gender = 'male'\r\nvar bed = new Noun('bed');\r\nbed.foreign = 'postel';\r\nbed.gender = 'female';\r\nvar woman = new Noun('woman');\r\nwoman.foreign = 'zena';\r\nwoman.gender = 'female';\r\nvar man = new Noun('man');\r\nman.foreign = 'muz';\r\nman.gender = 'male';\r\nvar car = new Noun('car');\r\ncar.foreign = 'auto';\r\ncar.gender = 'neuter';\r\nvar gift = new Noun('gift');\r\ngift.foreign = 'darek';\r\ngift.gender = 'male';\r\nvar hospital = new Noun('hospital');\r\nhospital.foreign = 'nemocnice';\r\nhospital.gender = 'female';\r\nvar night = new Noun('night');\r\nnight.foreign = 'noc';\r\nnight.gender = 'female';\r\n\r\nvar toBe = new Verb('to be');\r\ntoBe.infinitive = 'byt';\r\ntoBe.present = ['am', 'are', 'is', 'are', 'are', 'are'];\r\ntoBe.presentForeign = ['jsem', 'jsi', 'je', 'jsme', 'jste', 'jsou'];\r\nvar toDo = new Verb('to do');\r\ntoDo.infinitive = 'delat';\r\ntoDo.present = ['do', 'do', 'does','do','do','do'];\r\ntoDo.presentForeign = ['delam', 'delas', 'dela', 'delame', 'delate', 'delaji']\r\n\r\n\r\nvar young = new Adjective('young');\r\nyoung.foreign = ['mlady', 'mlada', 'mlade'];\r\nvar old = new Adjective('old');\r\nold.foreign = ['stary', 'stara', 'stare'];\r\nvar small = new Adjective('small');\r\nsmall.foreign = ['maly', 'mala', 'male'];\r\nvar large = new Adjective('large');\r\nlarge.foreign = ['velky', 'velka', 'velke']; \r\nvar blue = new Adjective('blue');\r\nblue.foreign = ['modry', 'modra', 'modre'];\r\nvar green = new Adjective('green');\r\ngreen.foreign = ['zeleny', 'zelena', 'zelene'];\r\nvar beautiful = new Adjective('beautfiul');\r\nbeautiful.foreign = ['krasny', 'krasna', 'krasne'];\r\nvar healthy = new Adjective('healthy');\r\nhealthy.foreign = ['zdravy', 'zdrava', 'zdrave'];\r\nvar strong = new Adjective('strong');\r\nstrong.foreign = ['silny', 'silna', 'silne'];\r\nvar cold = new Adjective('cold');\r\ncold.foreign = ['studeny', 'studena', 'studene'];\r\nvar hot = new Adjective('hot');\r\nhot.foreign = ['horky', 'horka', 'horke'];\r\n\r\n\r\nexport var wordList = {\r\n    defArticle : {english: 'The', foreign: {male:'Ten', female:'Ta', neuter:'To'}},\r\n    nouns : [beer, wine, dog, table, banana, woman, man, tree, bed, car, gift, hospital, night],\r\n    verbs : [toBe, toDo],\r\n    adjectives : [young, old, small, large, blue, green, beautiful, healthy, strong, cold, hot] \r\n}","import React from 'react';\r\nimport Reader from './Components/Reader';\r\nimport TextCatalogue from './Components/TextCatalogue'\r\nimport WordListDisplay from './Components/WordListDisplay';\r\nimport TestPage from './Components/TestPage';\r\nimport {rndSentence} from './Components/TestMaker';\r\nimport {wordList} from './Assets/Vocab';\r\nimport './App.css';\r\nimport {Tabs, Tab} from  'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    knownWords : wordList,\r\n    typesToShow : ['Nouns', 'Verbs', 'Adjectives'], \r\n    translationMode : 'fromEng', \r\n    userAnswer: '',\r\n    sentences: rndSentence(wordList), \r\n    tabToShow: 'WordList',\r\n    savedTexts: '',\r\n    text: '',\r\n    title: '',\r\n    readerMode: 'paste',\r\n    wordToSearchFor: '',\r\n    searchFromStart: false,\r\n  }\r\n\r\n  changeToShow = (category) => {\r\n    var ttShow = Array.from(this.state.typesToShow);\r\n    if (ttShow.includes(category)) {\r\n      ttShow = ttShow.filter(x => x!==category)\r\n    } else {ttShow.push(category)}\r\n    this.setState({typesToShow: ttShow});\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    if (this.state.translationMode === 'fromEng') {\r\n      var newMode = 'toEng'\r\n    } else {newMode = 'fromEng'}\r\n    this.setState({translationMode: newMode})\r\n  }\r\n\r\n  ChangeAnswerHandler = (event) => {\r\n    if (this.state.translationMode === 'fromEng') {\r\n      var ans = this.state.sentences.foreign\r\n    } else {ans = this.state.sentences.english}\r\n    console.log(ans, this.state.userAnswer)\r\n    if (event.target.value.toLowerCase() === ans.toLowerCase()) {\r\n      this.setState({sentences: rndSentence(this.state.knownWords), userAnswer:''})\r\n    } else { this.setState({userAnswer:event.target.value}) }\r\n  }\r\n\r\n  saveText = (date, title, text) => {\r\n\r\n    var newTextObj = {\r\n      date: date,\r\n      title: title,\r\n      text: text\r\n    }\r\n  \r\n    this.saveToLocalStorage(newTextObj)\r\n  }\r\n\r\n  saveToLocalStorage = (textObj) => {\r\n    let savedTexts\r\n  \r\n    if (localStorage.getItem('savedTexts') != null) {\r\n      savedTexts = JSON.parse(localStorage.getItem('savedTexts'))\r\n      savedTexts.push(textObj);\r\n    } else {\r\n      savedTexts = []\r\n      savedTexts.push(textObj);\r\n    }\r\n    localStorage.setItem('savedTexts', JSON.stringify(savedTexts))\r\n    this.componentWillMount()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    if (localStorage.getItem('savedTexts') != null) {\r\n      var savedTexts = JSON.parse(localStorage.getItem('savedTexts'))\r\n      this.setState(\r\n        {savedTexts: savedTexts}\r\n      )\r\n    } else {\r\n        this.setState(\r\n          {savedTexts: ''}\r\n        )\r\n    }\r\n  }\r\n\r\n  goToReader = (e) => {\r\n    var textTitle = e.target.id\r\n    var matchingTextArray = this.state.savedTexts.filter(text => text.title === textTitle)\r\n    var matchingText = matchingTextArray[0].text\r\n    this.setState({tabToShow: 'Reader', readerMode: 'read', text: matchingText, title: textTitle})\r\n    e.preventDefault()\r\n  }\r\n\r\n  updateReaderMode = (mode) => {\r\n    this.setState(\r\n      {readerMode: mode}\r\n    )\r\n  }\r\n\r\n  updateText = (text) => {\r\n    this.setState(\r\n      {text: text}\r\n    )\r\n  }\r\n\r\n  updateTitle = (title) => {\r\n    this.setState(\r\n      {title: title}\r\n    )\r\n  }\r\n  changeSearchWord = (event) => {\r\n    this.setState({wordToSearchFor:event.target.value})\r\n  }\r\n\r\n  changeStartChecked = (event) => {\r\n    this.setState({searchFromStart:!this.state.searchFromStart})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"App-header\">Word Box</h1>\r\n        <Tabs\r\n          activeKey={this.state.tabToShow}\r\n          onSelect={key => this.setState({tabToShow:key})}\r\n          variant = 'pills'\r\n          fill\r\n        >\r\n        <Tab eventKey='Reader' title='Analyse text'>\r\n          <Reader knownWords={this.state.knownWords} saveText={this.saveText} mode={this.state.readerMode} updateMode={this.updateReaderMode} updateText={this.updateText} updateTitle={this.updateTitle} text={this.state.text} title={this.state.title}/>\r\n        </Tab>\r\n        <Tab eventKey='TextCatalogue' title='Saved Texts'>\r\n          <TextCatalogue savedTexts={this.state.savedTexts} goToReader={this.goToReader}/>\r\n        </Tab>\r\n        <Tab eventKey='WordList' title='Known Words'>\r\n          <WordListDisplay \r\n            words={this.state.knownWords} \r\n            types={this.state.typesToShow}\r\n            changeTypes={this.changeToShow}\r\n            searchFor={this.state.wordToSearchFor}\r\n            changeSearch={this.changeSearchWord}\r\n            searchFromStart={this.state.searchFromStart}\r\n            changeCheckBox={this.changeStartChecked}\r\n          />          \r\n        </Tab>\r\n        <Tab eventKey='testPage' title='Test Your knowledge'>\r\n          <TestPage \r\n            words={this.state.knownWords}\r\n            transMode={this.state.translationMode}\r\n            switchModeClick={this.switchModeHandler}\r\n            userAns={this.state.userAnswer}\r\n            testQ={this.state.sentences}\r\n            changeAns={this.ChangeAnswerHandler}\r\n          />          \r\n        </Tab>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  } \r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}